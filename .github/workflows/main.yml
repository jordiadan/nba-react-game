name: Test and Coverage

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test_and_coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        npm install
        npm list

    - name: Run tests and calculate coverage
      run: |
        npm test -- --coverage
        ls -l coverage

    - name: Get coverage percentage
      id: coverage
      run: |
        COVERAGE=$(sed -n 's/.*<span class="pc_cov">\([^<]*\)<\/span><span class="pc_vis">.*/\1/p' coverage/lcov-report/index.html)
        echo "::set-output name=coverage::$COVERAGE"

    - name: Check coverage
      run: |
        COVERAGE=${{ steps.coverage.outputs.coverage }}
        if [ "$COVERAGE" -ge 80 ]; then
          echo -e "::set-output name=status::Yes\n::set-output name=emoji:::white_check_mark:"
        else
          echo -e "::set-output name=status::No\n::set-output name=emoji:::x:"
        fi

    - name: Create or update coverage comment
      run: |
        COMMENT="## Coverage Report\n\nThe test coverage for this pull request is: **${{ steps.coverage.outputs.coverage }}%**\n\n<details><summary>Details</summary>\n\n- **Status:** ${{ steps.status }}\n\n</details>\n\n$([[ steps.status == 'Yes' ]] && echo ':::white_check_mark:' || echo ':::x:') *Coverage is above 80%: ${{ steps.status }}*"
        API_URL="https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

        # Create a new comment
        curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\":\"$COMMENT\", \"in_reply_to\":\"${{ github.event.comment.id }}\"}" $API_URL
